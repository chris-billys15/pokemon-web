{"version":3,"sources":["context/MyPokemonContext.js","context/MyPokemonProvider.js","graphql/get-pokemons.js","utility.js","components/PokemonList.js","components/PokemonDetail.js","components/MyPokemon.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["intialContext","myPokemon","MyPokemonContext","createContext","MyPokemonProvider","children","useState","setMyPokemon","storage","localStorage","getItem","useEffect","JSON","parse","saveMyPokemon","value","setItem","stringify","pokemonWithNicknameExist","nickname","species","found","i","length","Provider","addNewPokemon","pokemon","bool","name","data","image","sprites","front_default","concat","e","console","log","releasePokemon","index","splice","GET_POKEMONS","gql","GET_POKEMON","toPascalCase","s","replace","w","toUpperCase","slice","toLowerCase","pad","num","size","toString","notify","str","toast","warn","icon","theme","type","width","src","PokemonList","useQuery","variables","offset","limit","error","loading","fetchMore","className","color","pokemons","results","map","to","placeholder","alt","top","id","nextOffset","onClick","updateQuery","prevResult","fetchMoreResult","mapStats","hp","attack","defense","speed","PokemonDetail","modalOpen","setModalOpen","nick","setNick","setPokemon","invalidInput","setInvalidInput","useParams","myPokemonContext","useContext","React","stats","item","stat","base_stat","Math","random","height","weight","types","moves","move","isOpen","toggle","onChange","target","invalid","disabled","success","MyPokemon","links","href","text","NavbarComponent","setIsOpen","dark","expand","navbar","key","createNavItem","App","client","ApolloClient","uri","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAEMA,EAAgB,CACrBC,UAAW,IAGNC,EAAmBC,wBAAcH,GAIxBE,I,OCmEAE,EA1EW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,MADA,mBACpCL,EADoC,KACzBM,EADyB,KAErCC,EAAUC,aAAaC,QAAQ,cACrCC,qBAAU,WACJV,GAEHM,EADGC,EACUI,KAAKC,MAAML,GAEX,MAGb,IAEH,IAAMM,EAAgB,SAACC,GAClBA,IACHN,aAAaO,QAAQ,aAAcJ,KAAKK,UAAUF,IAClDR,EAAaQ,KAITG,EAA2B,SAACC,EAAUC,GAG3C,IAFA,IAAIC,GAAQ,EACRC,EAAI,GACAD,GAASC,EAAIrB,EAAUsB,QAE7BtB,EAAUqB,GAAGH,WAAaA,GAC1BlB,EAAUqB,GAAGF,UAAYA,IAEzBC,GAAQ,GAETC,IAED,OAAOD,GA0BR,OACC,cAAC,EAAiBG,SAAlB,CACCT,MAAO,CACNd,YACAiB,2BACAX,eACAO,gBACAW,cA/BmB,SAACN,EAAUO,GAChC,IACC,IAAMC,EAAOT,EAAyBC,EAAD,OAAWO,QAAX,IAAWA,OAAX,EAAWA,EAASE,MACzD,IAAKD,EAAM,CAAC,IAAD,EACNE,EAAO,CACV,CACCC,MAAK,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAASK,eAAX,aAAE,EAAkBC,cACzBb,SAAUA,EACVC,QAAO,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAASE,OAGpBd,EAAcb,EAAUgC,OAAOJ,IAEhC,OAAQF,EACP,MAAOO,GACRC,QAAQC,IAAIF,KAiBXG,eAboB,SAACC,GACvB,IAAIT,EAAOjB,KAAKC,MAAMD,KAAKK,UAAUhB,IACrC4B,EAAKU,OAAOD,EAAO,GACnBxB,EAAce,KAGd,SAUExB,K,gCCtESmC,EAAeC,YAAH,kVAqBZC,EAAcD,YAAH,qb,eCpBlBE,EAAe,SAACC,GACrB,OAAIA,GACHA,EAAIA,EAAEC,QAAQ,IAAK,MACVA,QAAQ,QAAQ,SAAUC,GAClC,OAAOA,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,GAAGC,iBAGlCL,GAEFM,EAAM,SAACC,EAAKC,GACjB,GAAID,EAAK,CAER,IADAA,EAAMA,EAAIE,WACHF,EAAI5B,OAAS6B,GAAMD,EAAM,IAAMA,EACtCA,EAAM,IAAMA,EAEb,OAAOA,GAGFG,EAAS,SAACC,GAAD,OACdC,IAAMC,KAAKF,EAAK,CACfG,KAAM,cAAGC,MAAH,EAAUC,KAAV,OAAqB,qBAAKC,MAAM,OAAOC,IAAI,sBCoEpCC,G,YA1EK,WAAO,IAAD,EACmBC,YAASxB,EAAc,CAClEyB,UAAW,CAAEC,OAAQ,EAAGC,MAAO,MADxBtC,EADiB,EACjBA,KAAMuC,EADW,EACXA,MAAOC,EADI,EACJA,QAASC,EADL,EACKA,UAgC9B,OAAIF,EAAc,wCACdC,IAAYxC,EAEd,qBAAK0C,UAAU,mBAAf,SACC,cAAC,IAAD,CAASA,UAAU,oBAAoBC,MAAM,UAAUZ,KAAK,WAK9D,sBAAKW,UAAU,mBAAf,UACC,qBAAKA,UAAU,eAAf,SACE1C,EAAK4C,SAASC,QAAQC,KAAI,SAACjD,GAC3B,OACC,eAAC,IAAD,CAAyB6C,UAAU,UAAnC,UACC,cAAC,IAAD,CAAMK,GAAE,mBAAclD,EAAQE,MAA9B,SACC,cAAC,IAAD,CACCiD,YAAY,gBACZC,IAAI,iBACJhB,IAAKpC,EAAQI,MACbiD,KAAG,MAGL,cAAC,IAAD,UACC,eAAC,IAAD,CAAMR,UAAU,UAAUK,GAAE,mBAAclD,EAAQE,MAAlD,UACC,cAAC,IAAD,CAAW2C,UAAU,eAArB,SACErB,EAAIxB,EAAQsD,GAAI,KAElB,cAAC,IAAD,CAAcT,UAAU,4BAAxB,SACE5B,EAAajB,EAAQE,eAffF,EAAQE,WAvCJ,IADIC,EAAK4C,SAApBQ,WAGN,cAAC,IAAD,CACCV,UAAU,WACVC,MAAM,SACNU,QAAS,WAAO,IACPD,EAAepD,EAAK4C,SAApBQ,WACRX,EAAU,CACTL,UAAW,CAAEC,OAAQe,GACrBE,YAAa,SAACC,EAAD,GAAsC,IAAvBC,EAAsB,EAAtBA,gBAK3B,OAJAA,EAAgBZ,SAASC,QAAzB,sBACIU,EAAWX,SAASC,SADxB,YAEIW,EAAgBZ,SAASC,UAEtBW,MAZX,SAiBC,8CAII,kCC8HHC,G,MAAW,CAChBC,GAAI,KACJC,OAAQ,SACRC,QAAS,UACT,iBAAkB,SAClB,kBAAmB,SACnBC,MAAO,UAEOC,EAlKO,WAAO,IAAD,IACOrF,oBAAS,GADhB,mBACpBsF,EADoB,KACTC,EADS,OAEHvF,mBAAS,IAFN,mBAEpBwF,EAFoB,KAEdC,EAFc,OAGGzF,mBAAS,MAHZ,mBAGpBoB,EAHoB,KAGXsE,EAHW,OAIa1F,oBAAS,GAJtB,mBAIpB2F,EAJoB,KAINC,EAJM,KAKnBtE,EAASuE,cAATvE,KACFwE,EAAmBC,qBAAWnG,GANT,EAQM8D,YAAStB,EAAa,CACtDuB,UAAW,CAAErC,KAAMA,KADZC,EARmB,EAQnBA,KAAMwC,EARa,EAQbA,QAASD,EARI,EAQJA,MAIvBkC,IAAM3F,WAAU,WACXkB,GACHmE,EAAWnE,EAAKH,WAEf,CAACG,IAWJ,OAAIuC,EAAc,wCACdC,IAAYxC,EAAa,6CAG5B,sBAAK0C,UAAU,qBAAf,UACC,sBAAKA,UAAU,aAAf,UACC,sBAAKA,UAAU,YAAf,oBACK5B,EAAY,OAACjB,QAAD,IAACA,OAAD,EAACA,EAASE,MAD3B,YACoCsB,EAAG,OAACxB,QAAD,IAACA,OAAD,EAACA,EAASsD,GAAI,IAAM,OAE3D,sBAAKT,UAAU,0BAAf,UACC,sBAAKA,UAAU,iCAAf,UACC,cAAC,IAAD,CACCM,YAAY,gBACZN,UAAU,WACVT,IAAG,OAAEpC,QAAF,IAAEA,GAAF,UAAEA,EAASK,eAAX,aAAE,EAAkBC,gBAExB,sBAAKuC,UAAU,0CAAf,UACC,qBAAKA,UAAU,kBAAf,gCACA,qBAAKA,UAAU,aAAf,gBACE7C,QADF,IACEA,OADF,EACEA,EAAS6E,MAAM5B,KAAI,SAAC6B,GACpB,OACC,wCAASlB,EAASkB,EAAKC,KAAK7E,MAA5B,cACC4E,EAAKE,qBAMV,cAAC,IAAD,CACCnC,UAAU,YACVC,MAAM,SACNU,QAAS,WAvCCyB,KAAKC,SAAW,GAE9Bf,GAAa,GAEbvC,EAAO,8BAgCJ,yBAUD,qBAAKiB,UAAU,+BAAf,SACC,sBAAKA,UAAU,wBAAf,UACC,sBAAKA,UAAU,qBAAf,UACC,sBAAKA,UAAU,0BAAf,UACC,qBAAKA,UAAU,gBAAf,oBACA,sBAAKA,UAAU,kBAAf,UACoB,IAAX,OAAP7C,QAAO,IAAPA,OAAA,EAAAA,EAASmF,QADX,YAID,sBAAKtC,UAAU,qBAAf,UACC,qBAAKA,UAAU,gBAAf,oBACA,sBAAKA,UAAU,kBAAf,WACS,OAAP7C,QAAO,IAAPA,OAAA,EAAAA,EAASoF,QAAS,GADpB,eAKF,sBAAKvC,UAAU,yCAAf,UACC,qBAAKA,UAAU,kBAAf,mBACA,qBAAKA,UAAU,iBAAf,gBACE7C,QADF,IACEA,OADF,EACEA,EAASqF,MAAMpC,KAAI,SAAC6B,GACpB,OACC,qBACCjC,UAAS,oBAAeiC,EAAK5C,KAAKhC,KAAzB,SADV,mBAEKe,EAAa6D,EAAK5C,KAAKhC,MAAMiB,QACjC,IACA,gBAML,sBAAK0B,UAAU,8CAAf,UACC,qBAAKA,UAAU,kBAAf,mBACA,oBAAIA,UAAU,kBAAd,gBACE7C,QADF,IACEA,OADF,EACEA,EAASsF,MAAMrC,KAAI,SAACsC,GAAU,IAAD,EAC7B,OACC,oBAAI1C,UAAU,YAAd,SACE5B,EAAY,UAACsE,EAAKA,YAAN,aAAC,EAAWrF,2BAWlC,eAAC,IAAD,CAAOsF,OAAQtB,EAAf,UACC,cAAC,IAAD,CACCuB,OAAQ,WACPtB,GAAa,GACbE,EAAQ,KAHV,4CAQA,eAAC,IAAD,WACC,cAAC,IAAD,CACClB,YAAY,WACZuC,SAAU,SAAClF,GAAD,OAAO6D,EAAQ7D,EAAEmF,OAAOtG,QAClCuG,QAASrB,IAEV,cAAC,IAAD,8EAID,eAAC,IAAD,WACC,cAAC,IAAD,CACCzB,MAAM,UACN+C,SAAmB,KAATzB,EACVZ,QAAS,WACR,IAAMsC,EAAUpB,EAAiB3E,cAAcqE,EAAMpE,GACrDwE,GAAiBsB,GACbA,IACH3B,GAAa,GACbE,EAAQ,IACRzC,EAAO,uCATV,oBAcU,UAGZ,cAAC,IAAD,QC5JUmE,EAAY,WAAO,IAAD,ENLGpB,qBAAWnG,GMMpCD,EADsB,EACtBA,UAAWoC,EADW,EACXA,eACnB,OAAKpC,EAEJ,sBAAKsE,UAAU,mBAAf,UACC,qBAAKA,UAAU,eAAf,SACEtE,EAAU0E,KAAI,SAACjD,EAASY,GACxB,OACC,eAAC,IAAD,CAA6BiC,UAAU,UAAvC,UACC,cAAC,IAAD,CAASO,IAAI,iBAAiBhB,IAAKpC,EAAQI,MAAOiD,KAAG,IACrD,eAAC,IAAD,WACC,cAAC,IAAD,CAAWR,UAAU,eAArB,SACE7C,EAAQP,WAEV,eAAC,IAAD,CAAcoD,UAAU,kBAAxB,eACI5B,EAAajB,EAAQN,SADzB,QAGA,cAAC,IAAD,CACCmD,UAAU,WACVC,MAAM,SACNU,QAAS,WACR7C,EAAeC,GACfgB,EAAO,GAAD,OACF5B,EAAQP,SADN,cACoBwB,EACxBjB,EAAQN,SAFJ,gCALR,0BATSM,EAAQP,eA4BtB,cAAC,IAAD,OAlCqB,8CCJlBuG,EAAQ,CACb,CAAEC,KAAM,IAAKC,KAAM,WACnB,CAAED,KAAM,aAAcC,KAAM,eAUvBC,EAAkB,WAAO,IAAD,EACDvB,IAAMhG,UAAS,GADd,mBACtB4G,EADsB,KACdY,EADc,KAM7B,OACC,8BACC,eAAC,IAAD,CAAQtD,MAAM,SAASuD,MAAI,EAACC,OAAO,KAAnC,UACC,cAAC,IAAD,CAAazD,UAAU,UAAUoD,KAAK,IAAtC,yBAGA,cAAC,IAAD,CACCpD,UAAU,OACVW,QAAS,WAVH4C,GAATZ,MAcE,cAAC,IAAD,CAAUA,OAAQA,EAAQe,QAAM,EAAhC,SACC,cAAC,IAAD,CAAK1D,UAAU,UAAU0D,QAAM,EAA/B,SACEP,EAAM/C,KAAI,SAAC6B,EAAM0B,GACjB,OA7Be,SAACA,EAAK1B,GAAN,OACrB,cAAC,IAAD,UACC,cAAC,IAAD,CAAmBmB,KAAMnB,EAAKmB,KAA9B,SACEnB,EAAKoB,MADOM,KA2BFC,CAAcD,EAAK1B,gB,MCNlB4B,MArBf,WACC,IAAMC,EAAS,IAAIC,IAAa,CAC/BC,IAAK,yCAEN,OACC,cAACC,EAAA,EAAD,CAAgBH,OAAQA,EAAxB,SACC,qBAAK9D,UAAU,MAAf,SACC,eAAC,IAAD,WACC,cAAC,EAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOkE,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU9D,GAAG,mBClBjC+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,UACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.86d820b7.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nconst intialContext = {\n\tmyPokemon: [],\n};\n\nconst MyPokemonContext = createContext(intialContext);\n\nexport const useMyPokemon = () => useContext(MyPokemonContext);\n\nexport default MyPokemonContext;\n","import React, { useEffect, useState } from \"react\";\nimport MyPokemonContext from \"./MyPokemonContext\";\n\nconst MyPokemonProvider = ({ children }) => {\n\tconst [myPokemon, setMyPokemon] = useState(null);\n\tconst storage = localStorage.getItem(\"my-pokemon\");\n\tuseEffect(() => {\n\t\tif (!myPokemon) {\n\t\t\tif (storage) {\n\t\t\t\tsetMyPokemon(JSON.parse(storage));\n\t\t\t} else {\n\t\t\t\tsetMyPokemon([]);\n\t\t\t}\n\t\t}\n\t}, []);\n\n\tconst saveMyPokemon = (value) => {\n\t\tif (value) {\n\t\t\tlocalStorage.setItem(\"my-pokemon\", JSON.stringify(value));\n\t\t\tsetMyPokemon(value);\n\t\t}\n\t};\n\n\tconst pokemonWithNicknameExist = (nickname, species) => {\n\t\tlet found = false;\n\t\tlet i = 0;\n\t\twhile (!found && i < myPokemon.length) {\n\t\t\tif (\n\t\t\t\tmyPokemon[i].nickname === nickname &&\n\t\t\t\tmyPokemon[i].species === species\n\t\t\t) {\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn found;\n\t};\n\tconst addNewPokemon = (nickname, pokemon) => {\n\t\ttry {\n\t\t\tconst bool = pokemonWithNicknameExist(nickname, pokemon?.name);\n\t\t\tif (!bool) {\n\t\t\t\tlet data = [\n\t\t\t\t\t{\n\t\t\t\t\t\timage: pokemon?.sprites?.front_default,\n\t\t\t\t\t\tnickname: nickname,\n\t\t\t\t\t\tspecies: pokemon?.name,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tsaveMyPokemon(myPokemon.concat(data));\n\t\t\t}\n\t\t\treturn !bool;\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst releasePokemon = (index) => {\n\t\tlet data = JSON.parse(JSON.stringify(myPokemon));\n\t\tdata.splice(index, 1);\n\t\tsaveMyPokemon(data);\n\t};\n\treturn (\n\t\t<MyPokemonContext.Provider\n\t\t\tvalue={{\n\t\t\t\tmyPokemon,\n\t\t\t\tpokemonWithNicknameExist,\n\t\t\t\tsetMyPokemon,\n\t\t\t\tsaveMyPokemon,\n\t\t\t\taddNewPokemon,\n\t\t\t\treleasePokemon,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</MyPokemonContext.Provider>\n\t);\n};\n\nexport default MyPokemonProvider;\n","import gql from \"graphql-tag\";\n\nexport const GET_POKEMONS = gql`\n\tquery pokemons($limit: Int, $offset: Int) {\n\t\tpokemons(limit: $limit, offset: $offset) {\n\t\t\tcount\n\t\t\tnext\n\t\t\tprevious\n\t\t\tnextOffset\n\t\t\tprevOffset\n\t\t\tstatus\n\t\t\tmessage\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\turl\n\t\t\t\tname\n\t\t\t\timage\n\t\t\t\tartwork\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_POKEMON = gql`\n\tquery pokemon($name: String!) {\n\t\tpokemon(name: $name) {\n\t\t\tid\n\t\t\tname\n\t\t\tsprites {\n\t\t\t\tfront_default\n\t\t\t}\n\t\t\ttypes {\n\t\t\t\ttype {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tmoves {\n\t\t\t\tmove {\n\t\t\t\t\turl\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tstats {\n\t\t\t\tbase_stat\n\t\t\t\tstat {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\theight\n\t\t\tweight\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst toPascalCase = (s) => {\n\tif (s) {\n\t\ts = s.replace(\"-\", \" \");\n\t\treturn s.replace(/\\w+/g, function (w) {\n\t\t\treturn w[0].toUpperCase() + w.slice(1).toLowerCase();\n\t\t});\n\t}\n\treturn s;\n};\nconst pad = (num, size) => {\n\tif (num) {\n\t\tnum = num.toString();\n\t\twhile (num.length < size) num = \"0\" + num;\n\t\tnum = \"#\" + num;\n\t}\n\treturn num;\n};\n\nconst notify = (str) =>\n\ttoast.warn(str, {\n\t\ticon: ({ theme, type }) => <img width=\"20px\" src=\"/pokeball.png\" />,\n\t});\n\nconst isImageExist = (url) => {\n\t// var http = new XMLHttpRequest();\n\t// http.open(\"HEAD\", url, false);\n\t// http.send();\n\t// return http.status != 404;\n\tvar img = new Image();\n\timg.src = url;\n\treturn img.height != 0;\n};\nexport { toPascalCase, pad, notify, isImageExist };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_POKEMONS } from \"../graphql/get-pokemons\";\nimport {\n\tCard,\n\tCardImg,\n\tCardBody,\n\tCardTitle,\n\tButton,\n\tSpinner,\n\tCardSubtitle,\n} from \"reactstrap\";\nimport { pad, toPascalCase } from \"../utility\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../styles/PokemonList.scss\";\n\nconst PokemonList = () => {\n\tconst { data, error, loading, fetchMore } = useQuery(GET_POKEMONS, {\n\t\tvariables: { offset: 0, limit: 20 },\n\t});\n\n\tconst renderLoadMoreButton = () => {\n\t\tconst { nextOffset } = data.pokemons;\n\t\tif (nextOffset !== 0) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"load-btn\"\n\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconst { nextOffset } = data.pokemons;\n\t\t\t\t\t\tfetchMore({\n\t\t\t\t\t\t\tvariables: { offset: nextOffset },\n\t\t\t\t\t\t\tupdateQuery: (prevResult, { fetchMoreResult }) => {\n\t\t\t\t\t\t\t\tfetchMoreResult.pokemons.results = [\n\t\t\t\t\t\t\t\t\t...prevResult.pokemons.results,\n\t\t\t\t\t\t\t\t\t...fetchMoreResult.pokemons.results,\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\treturn fetchMoreResult;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div>Load more</div>\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t\treturn <></>;\n\t};\n\n\tif (error) return <div>Error</div>;\n\tif (loading || !data)\n\t\treturn (\n\t\t\t<div className=\"pokemonlist-page\">\n\t\t\t\t<Spinner className=\"align-self-center\" color=\"warning\" type=\"grow\" />\n\t\t\t</div>\n\t\t);\n\n\treturn (\n\t\t<div className=\"pokemonlist-page\">\n\t\t\t<div className=\"pl-container\">\n\t\t\t\t{data.pokemons.results.map((pokemon) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card key={pokemon.name} className=\"pl-item\">\n\t\t\t\t\t\t\t<Link to={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t<CardImg\n\t\t\t\t\t\t\t\t\tplaceholder=\"/pokeball.png\"\n\t\t\t\t\t\t\t\t\talt=\"Card image cap\"\n\t\t\t\t\t\t\t\t\tsrc={pokemon.image}\n\t\t\t\t\t\t\t\t\ttop\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<Link className=\"link-to\" to={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t\t<CardTitle className=\"pokemon-name\">\n\t\t\t\t\t\t\t\t\t\t{pad(pokemon.id, 3)}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubtitle className=\"pokemon-species list-page\">\n\t\t\t\t\t\t\t\t\t\t{toPascalCase(pokemon.name)}\n\t\t\t\t\t\t\t\t\t</CardSubtitle>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{renderLoadMoreButton()}\n\t\t</div>\n\t);\n};\n\nexport default PokemonList;\n","import React, { useContext, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n\tCardImg,\n\tButton,\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tInput,\n\tModalFooter,\n\tFormFeedback,\n} from \"reactstrap\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_POKEMON } from \"../graphql/get-pokemons\";\nimport { toPascalCase, pad, notify } from \"../utility\";\nimport { ToastContainer } from \"react-toastify\";\nimport MyPokemonContext from \"../context/MyPokemonContext\";\nimport \"../styles/PokemonDetail.scss\";\n\nconst PokemonDetail = () => {\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [nick, setNick] = useState(\"\");\n\tconst [pokemon, setPokemon] = useState(null);\n\tconst [invalidInput, setInvalidInput] = useState(false);\n\tconst { name } = useParams();\n\tconst myPokemonContext = useContext(MyPokemonContext);\n\n\tconst { data, loading, error } = useQuery(GET_POKEMON, {\n\t\tvariables: { name: name },\n\t});\n\n\tReact.useEffect(() => {\n\t\tif (data) {\n\t\t\tsetPokemon(data.pokemon);\n\t\t}\n\t}, [data]);\n\n\tconst catchPokemon = (pokemon) => {\n\t\tlet isCaught = Math.random() < 0.5;\n\t\tif (isCaught) {\n\t\t\tsetModalOpen(true);\n\t\t} else {\n\t\t\tnotify(`Too bad! Pokemon got away`);\n\t\t}\n\t};\n\n\tif (error) return <div>Error</div>;\n\tif (loading || !data) return <div>Loading...</div>;\n\n\treturn (\n\t\t<div className=\"pokemondetail-page\">\n\t\t\t<div className=\"pd-content\">\n\t\t\t\t<div className=\"poke-name\">\n\t\t\t\t\t{`${toPascalCase(pokemon?.name)} ${pad(pokemon?.id, 3)}`}{\" \"}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pokemondetail-container\">\n\t\t\t\t\t<div className=\"d-flex flex-column flex-grow-1\">\n\t\t\t\t\t\t<CardImg\n\t\t\t\t\t\t\tplaceholder=\"/pokeball.png\"\n\t\t\t\t\t\t\tclassName=\"poke-img\"\n\t\t\t\t\t\t\tsrc={pokemon?.sprites?.front_default}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"detail-container detail-container-stats\">\n\t\t\t\t\t\t\t<div className=\"container-title\">Pokemon Base Stats</div>\n\t\t\t\t\t\t\t<div className=\"poke-stats\">\n\t\t\t\t\t\t\t\t{pokemon?.stats.map((item) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div>{`${mapStats[item.stat.name]} : ${\n\t\t\t\t\t\t\t\t\t\t\titem.base_stat\n\t\t\t\t\t\t\t\t\t\t}`}</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"btn-catch\"\n\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tcatchPokemon(pokemon);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCatch Me\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right-container flex-grow-1 \">\n\t\t\t\t\t\t<div className=\"typeandsize-container\">\n\t\t\t\t\t\t\t<div className=\"bodysize-container\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex flex-column mr-5\">\n\t\t\t\t\t\t\t\t\t<div className=\"bodysize-item\">Height</div>\n\t\t\t\t\t\t\t\t\t<div className=\"bodysize-number\">\n\t\t\t\t\t\t\t\t\t\t{pokemon?.height * 10} cm\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t\t\t\t<div className=\"bodysize-item\">Weight</div>\n\t\t\t\t\t\t\t\t\t<div className=\"bodysize-number\">\n\t\t\t\t\t\t\t\t\t\t{pokemon?.weight / 10} kg\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"detail-container detail-container-type\">\n\t\t\t\t\t\t\t\t<div className=\"container-title\">Types</div>\n\t\t\t\t\t\t\t\t<div className=\"type-container\">\n\t\t\t\t\t\t\t\t\t{pokemon?.types.map((item) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`poke-type ${item.type.name}-type`}\n\t\t\t\t\t\t\t\t\t\t\t>{`${toPascalCase(item.type.name).replace(\n\t\t\t\t\t\t\t\t\t\t\t\t\"-\",\n\t\t\t\t\t\t\t\t\t\t\t\t\" \"\n\t\t\t\t\t\t\t\t\t\t\t)}`}</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"detail-container detail-container-type mt-4\">\n\t\t\t\t\t\t\t\t<div className=\"container-title\">Moves</div>\n\t\t\t\t\t\t\t\t<ul className=\"moves-container\">\n\t\t\t\t\t\t\t\t\t{pokemon?.moves.map((move) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li className=\"text-left\">\n\t\t\t\t\t\t\t\t\t\t\t\t{toPascalCase(move.move?.name)}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* modal  */}\n\t\t\t<Modal isOpen={modalOpen}>\n\t\t\t\t<ModalHeader\n\t\t\t\t\ttoggle={function noRefCheck() {\n\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t\tsetNick(\"\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tWhat is your pokemon nickname?\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tplaceholder=\"Nickname\"\n\t\t\t\t\t\tonChange={(e) => setNick(e.target.value)}\n\t\t\t\t\t\tinvalid={invalidInput}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormFeedback>\n\t\t\t\t\t\tOh no! The same pokemon with that nickname is already exist!\n\t\t\t\t\t</FormFeedback>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={nick === \"\"}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst success = myPokemonContext.addNewPokemon(nick, pokemon);\n\t\t\t\t\t\t\tsetInvalidInput(!success);\n\t\t\t\t\t\t\tif (success) {\n\t\t\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t\t\t\tsetNick(\"\");\n\t\t\t\t\t\t\t\tnotify(`Congratulation! Pokemon is caught`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tRename\n\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t\t<ToastContainer />\n\t\t</div>\n\t);\n};\nconst mapStats = {\n\thp: \"Hp\",\n\tattack: \"Attack\",\n\tdefense: \"Defense\",\n\t\"special-attack\": \"Sp Atk\",\n\t\"special-defense\": \"Sp Def\",\n\tspeed: \"Speed\",\n};\nexport default PokemonDetail;\n","import React, { useEffect, useState } from \"react\";\nimport {\n\tCard,\n\tCardImg,\n\tCardBody,\n\tCardTitle,\n\tButton,\n\tCardSubtitle,\n} from \"reactstrap\";\nimport { notify, toPascalCase } from \"../utility\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useMyPokemon } from \"../context/MyPokemonContext\";\n\nexport const MyPokemon = () => {\n\tconst { myPokemon, releasePokemon } = useMyPokemon();\n\tif (!myPokemon) return <div>Loading...</div>;\n\treturn (\n\t\t<div className=\"pokemonlist-page\">\n\t\t\t<div className=\"pl-container\">\n\t\t\t\t{myPokemon.map((pokemon, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card key={pokemon.nickname} className=\"pl-item\">\n\t\t\t\t\t\t\t<CardImg alt=\"Card image cap\" src={pokemon.image} top />\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle className=\"pokemon-name\">\n\t\t\t\t\t\t\t\t\t{pokemon.nickname}\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t<CardSubtitle className=\"pokemon-species\">\n\t\t\t\t\t\t\t\t\t[ {toPascalCase(pokemon.species)} ]\n\t\t\t\t\t\t\t\t</CardSubtitle>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"load-btn\"\n\t\t\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\treleasePokemon(index);\n\t\t\t\t\t\t\t\t\t\tnotify(\n\t\t\t\t\t\t\t\t\t\t\t`${pokemon.nickname} [ ${toPascalCase(\n\t\t\t\t\t\t\t\t\t\t\t\tpokemon.species\n\t\t\t\t\t\t\t\t\t\t\t)} ] is released to the wild`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tRelease\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<ToastContainer />\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport {\n\tNavbar,\n\tNavbarBrand,\n\tCollapse,\n\tNavbarToggler,\n\tNav,\n\tNavItem,\n\tNavLink,\n} from \"reactstrap\";\n\nconst links = [\n\t{ href: \"/\", text: \"Pokedex\" },\n\t{ href: \"/mypokemon\", text: \"My Pokemon\" },\n];\nconst createNavItem = (key, item) => (\n\t<NavItem>\n\t\t<NavLink key={key} href={item.href}>\n\t\t\t{item.text}\n\t\t</NavLink>\n\t</NavItem>\n);\n\nconst NavbarComponent = () => {\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst toggleIsOpen = () => {\n\t\tisOpen ? setIsOpen(false) : setIsOpen(true);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Navbar color=\"danger\" dark expand=\"md\">\n\t\t\t\t<NavbarBrand className=\"me-auto\" href=\"/\">\n\t\t\t\t\tPokemon Web\n\t\t\t\t</NavbarBrand>\n\t\t\t\t<NavbarToggler\n\t\t\t\t\tclassName=\"me-2\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\ttoggleIsOpen();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Collapse isOpen={isOpen} navbar>\n\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t\t\t{links.map((item, key) => {\n\t\t\t\t\t\t\treturn createNavItem(key, item);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Nav>\n\t\t\t\t</Collapse>\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n};\n\nexport { NavbarComponent };\n","import {\n\tBrowserRouter as Router,\n\tRoutes,\n\tRoute,\n\tNavigate,\n} from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport MyPokemonProvider from \"./context/MyPokemonProvider\";\nimport PokemonList from \"../src/components/PokemonList\";\nimport PokemonDetail from \"../src/components/PokemonDetail\";\nimport { MyPokemon } from \"../src/components/MyPokemon\";\nimport { NavbarComponent } from \"../src/components/Navbar\";\nimport \"./App.css\";\nimport { useContext, useEffect } from \"react\";\nimport MyPokemonContext from \"./context/MyPokemonContext\";\n\nfunction App() {\n\tconst client = new ApolloClient({\n\t\turi: \"https://graphql-pokeapi.graphcdn.app\",\n\t});\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<NavbarComponent />\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path=\"/\" element={<PokemonList />}></Route>\n\t\t\t\t\t\t<Route path=\"/pokemon/:name\" element={<PokemonDetail />}></Route>\n\t\t\t\t\t\t<Route path=\"/mypokemon\" element={<MyPokemon />}></Route>\n\t\t\t\t\t\t<Route path=\"/:any\" element={<Navigate to=\"/\"></Navigate>}></Route>\n\t\t\t\t\t</Routes>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport MyPokemonProvider from \"./context/MyPokemonProvider\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<MyPokemonProvider>\n\t\t\t<App />\n\t\t</MyPokemonProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}